services:
  ray-head:
    build: .
    container_name: ray-head
    command: bash -c "
      ray start --head --port=6379 --dashboard-host=0.0.0.0  --dashboard-port=8265 &&
      echo 'Nodo HEAD en marcha y escuchando en puertos 6379 y 8265' &&
      tail -f /dev/null"
    ports:
      - "6379:6379"   
      - "8265:8265"  
      - "10001:10001" 
    networks:
      - ray-net
    shm_size: 1gb
    cpus: 2
    
  ray-worker-1:
    build: .
    container_name: ray-worker-1
    command: bash -c "
      ray start --address=ray-head:6379 &&
      echo 'Worker 1 conectado al HEAD' &&
      tail -f /dev/null"
    depends_on:
      - ray-head
    networks:
      - ray-net
    shm_size: 1gb
    cpus: 1

  ray-worker-2:
    build: .
    container_name: ray-worker-2
    command:  bash -c "
      ray start --address=ray-head:6379 &&
      echo 'Worker 2 conectado al HEAD' &&
      tail -f /dev/null"
    depends_on:
      - ray-head
    networks:
      - ray-net
    shm_size: 1gb
    cpus: 1

  model-api:
    build: .
    container_name: model-api
    command:  uvicorn serve:app --host 0.0.0.0 --port 8000 --reload
    environment:
      RAY_ADDRESS: ray://ray-head:10001
    ports:
      - "8000:8000"
    depends_on:
      - ray-head
    networks:
      - ray-net
    
  dashboard:
    build: .
    container_name: dashboard
    command:  streamlit run dashboard.py --server.address=0.0.0.0 --server.port=8501
    environment:
      RAY_ADDRESS: ray://ray-head:10001
      FASTAPI_URL: http://model-api:8000
      
    ports:
      - "8501:8501"
    depends_on:
      - ray-head
      - model-api
    networks:
      - ray-net

networks:
  ray-net:
    driver: bridge # Es el driver de red por defecto en Docker Compose

